Housekeeping
------------

- Add *.dox files to document file format of all interaction classes
  (done?), potential classes, and other ParamComposite subclasses.

- Add *.dox files for coulomb potential classes, which are not yet
  documented in main manual pages. 

Constant Pressure MD 
--------------------

- Port and test NptIntegrator subclass from DdMd.

Non-Orthorhombic (Rigid) Boundaries
-----------------------------------

- Use new applyShift method in MSD analyzer classes.

- Find other uses of Boundary::lengths in McMd namespace.
  Add tests to cause crash before misuse, as needed.

- Add Boundary::isOrthorhombic test other classes that require 
  orthorhombic boundaries.

- Add tests for CellList specifically for Monoclinic Boundary.

- Make an example in a Monoclinic cell and try running it with 
  mdSim and mcSim.

Deformable Boundaries
---------------------

- Generalize snapshot and obsolete pair list methods to use 
  miniminumDeformRatio to deal optimally with MD in deforming boundaries.

Serialization
-------------

- Test save / load with perturbation
- Test save / load with replica move
- Test MD serialization after forcing pair list rebuild upon restart output
- Move restart interval and file name, and isInitialized_  to Simulation base 
  classs.

Perturbation
------------

- Modify so that perturbation can be used without MPI, or change conditional 
  compilation so that a perturbation can only be compiled ifdef UTIL_MPI.

Interactions (Design change):
-----------------------------

- Make Interaction classes apply to only one choice of type index / indices.
  PotentialImpl class templates would then hold an array of Interactions.

- Create << and >> operators for each Interaction class. 

- Change file format to read typeId (ids) << Interaction.

SystemInterface base classes
----------------------------

- Derive analyzers from a public Analyzer and a protected (Mc|Md)SystemInterface
- Remove replace system().typePotential() by typePotential() in analyzers
- Derive SystemMcMove from a protected McSystemInterface
- Remove replace system().typePotential() by typePotential() in mcMoves
- Derive MdIntegrator from a protected MdSystemInterface
- Remove replace system().typePotential() by typePotential() in mdIntegrators

AtomType Diameters
------------------

Idea: Provide atom diameters for use by generators:

- Add static bool hasAtomDiameters_ and non-static double diameter_ members

- Simulation a friend of AtomType, so that static hasAtomDiameters
  variable can be read in Simulation block of the param file. Alternatively,
  provide a static function to optionally read this parameter.

- Add code to read diameter_ member if AtomType::hasAtomDiameters_ is true. 

